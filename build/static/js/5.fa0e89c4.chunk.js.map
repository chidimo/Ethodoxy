{"version":3,"sources":["components/LinkGridItem.js","constants.js","actions/drbActions.js","components/Douay.books.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__","useStyles","makeStyles","item","LinkGridItem","props","classes","title","location","a","createElement","className","to","DR_BOOKS_URL","concat","default_headers","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Allow-Headers","Access-Control-Max-Age","get_drb_books","book_list","dispatch","booklist","type","GET_DRB_BOOKS","container","paddingTop","DouayBooks","useDispatch","_useState","useState","_useState2","Object","slicedToArray","books","setBooks","useEffect","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","config","_ref2","data","results","next","wrap","_context","prev","headers","objectSpread","axios","get","sent","stop","apply","this","arguments","getBooks","react_default","react","Grid","spacing","root","filter","book","testament","map","key","id","titlecase","name","slugify"],"mappings":"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","file":"static/js/5.fa0e89c4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    item: {\n        // padding: '0px',\n        // margin: '5px',\n    }\n});\n\nconst LinkGridItem = props => {\n    const classes = useStyles();\n    const { title, location } = props;\n\n    return (\n        <Grid\n            item\n            classes={{\n                item: classes.item\n            }}\n        >\n            <Link className='book-link' to={ location }>{ title }</Link>\n        </Grid>\n    );\n};\n\n\nLinkGridItem.propTypes = {\n    location: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired\n};\n\nexport default LinkGridItem;\n","export const BASE_URL = 'https://ethodoxy.herokuapp.com/api/v1';\nexport const DR_BOOKS_URL = `${BASE_URL}/books/`;\n\nexport const default_headers = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'PUT, GET, PATCH, POST',\n    'Access-Control-Allow-Headers': 'Content-Type',\n    'Access-Control-Max-Age': '3000',\n};\n","import { GET_DRB_BOOKS } from './actions.types';\n\nconst get_drb_books_action_creator = booklist => {\n    return {\n        type: GET_DRB_BOOKS,\n        booklist,\n    };\n};\n\nexport const get_drb_books = (book_list) => dispatch => {\n    dispatch(get_drb_books_action_creator(book_list));\n};\n","import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport titlecase from 'titlecase';\nimport slugify from 'slugify';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\n\nimport { DR_BOOKS_URL, default_headers } from '../constants';\nimport LinkGridItem from './LinkGridItem';\n\nimport { get_drb_books } from '../actions/drbActions';\n\nconst useStyles = makeStyles({\n    container: {\n        paddingTop: '20px'\n    },\n});\n\nconst DouayBooks = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [ books, setBooks ] = useState([ 'a' ]);\n\n    useEffect(() => {\n        const getBooks = async () => {\n            let books = [];\n            let url = DR_BOOKS_URL;\n            const config = { headers: { ...default_headers } };\n\n            while (url) {\n                const { data } = await axios.get(url, config);\n                const { results, next } = data;\n                books = books.concat(results);\n                url = next;\n            }\n            setBooks(books);\n            dispatch(get_drb_books(books));\n        };\n        getBooks();\n    }, [ dispatch ]);\n\n\n    return (\n        <Fragment>\n            <h2>Douay-Rheims Bible</h2>\n\n            <h3>Old Testament</h3>\n            <Grid\n                container\n                spacing={2}\n                classes={{\n                    root: classes.container\n                }}\n            >\n                {\n                    books\n                        .filter(book => book.testament==='old testament')\n                        .map(book => {\n                            return (\n                                <LinkGridItem\n                                    key={ book.id }\n                                    title={ titlecase(book.name) }\n                                    location={ `/${slugify(book.name)}` }\n                                />\n                            );\n                        })\n                }\n            </Grid>\n\n            <h3>New Testament</h3>\n            <Grid\n                container\n                spacing={2}\n                classes={{\n                    root: classes.container\n                }}\n            >\n                {\n                    books\n                        .filter(book => book.testament==='new testament')\n                        .map(book => {\n                            return (\n                                <LinkGridItem\n                                    key={ book.id }\n                                    title={ titlecase(book.name) }\n                                    location={ `/${slugify(book.name)}` }\n                                />\n                            );\n                        })\n                }\n            </Grid>\n        </Fragment>\n    );\n};\n\nexport default DouayBooks;\n"],"sourceRoot":""}